name: Deploy to production

on:
  release:
    types: [published]
  workflow_dispatch:
  push:
    branches:
      - 1-run-ubysseyca-and-thothubysseyca-as-isolated-apps-on-docker-swarm-vm

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: read
  #     packages: write
  #     attestations: write
  #     id-token: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  #         tags: |
  #           type=schedule
  #           type=ref,event=branch
  #           type=ref,event=pr
  #           type=semver,pattern=v{{version}}
  #           type=semver,pattern={{major}}.{{minor}}
  #           type=semver,pattern={{major}}
  #           type=sha

  #     - name: Build and push Docker image
  #       id: push
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}

  deploy:
    # needs: build
    runs-on: ubuntu-latest
    # if: github.event_name == 'workflow_dispatch'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate with Google Cloud Platform
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/863738545301/locations/global/workloadIdentityPools/ubyssey-wif-pool-prd/providers/ubyssey-oidc-github-prd'
          service_account: 'deployment@ubyssey-prd.iam.gserviceaccount.com'

      - name: Configure SSH (improved)
        run: |
          mkdir -p ~/.ssh/
          # Write SSH key with proper line endings
          printf '%s\n' "$SSH_KEY" > ~/.ssh/production.key
          chmod 600 ~/.ssh/production.key
          
          # Validate the key format
          ssh-keygen -l -f ~/.ssh/production.key || echo "Invalid key format"
          
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/production.key
            StrictHostKeyChecking no
            PubkeyAuthentication yes
            PasswordAuthentication no
          END
        env:
          SSH_USER: github-actions-thoth
          SSH_KEY: ${{ secrets.GCP_SSH_PRIVATE_KEY_PRODUCTION }}
          SSH_HOST: ${{ secrets.GCP_SSH_HOST_PRODUCTION }}
      
      - name: Create thoth directory
        run: ssh production "mkdir -p /opt/thoth"

      - name: Upload Docker Compose configuration
        run: scp docker-compose.yml production:/opt/thoth/docker-compose.yml

      - name: Create shared network
        run: ssh production "docker network create --driver=overlay proxy-shared || true"

      - name: Deploy Thoth stack
        run: ssh production "docker stack deploy --compose-file /opt/thoth/docker-compose.yml thoth"